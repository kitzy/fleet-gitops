agent_options:
  config:
    decorators:
      load:
      - SELECT uuid AS host_uuid FROM system_info;
      - SELECT hostname AS hostname FROM system_info;
    options:
      disable_distributed: false
      distributed_interval: 10
      distributed_plugin: tls
      distributed_tls_max_attempts: 3
      logger_tls_endpoint: /api/osquery/log
      logger_tls_period: 10
      pack_delimiter: /
  overrides:
labels:
org_settings:
  features:
    enable_host_users: true
    enable_software_inventory: true
  fleet_desktop:
    transparency_url: 
  host_expiry_settings:
    host_expiry_enabled: false
    host_expiry_window: 0
  integrations:
    conditional_access_enabled:
    custom_scep_proxy:
    digicert:
    google_calendar:
    jira:
    ndes_scep_proxy:
    zendesk:
  mdm:
    apple_business_manager:
    apple_server_url:
    end_user_authentication:
      entity_id:
      idp_name:
      issuer_uri:
      metadata:
      metadata_url:
    end_user_license_agreement:
    volume_purchasing_program:
  org_info:
    contact_url: 
    org_logo_url:
    org_logo_url_light_background:
    org_name: Kitzy
  secrets:
  - secret: ${GLOBAL_ENROLL_SECRET}
  server_settings:
    ai_features_disabled: false
    deferred_save_host: false
    enable_analytics: true
    live_query_disabled: false
    query_report_cap: 0
    query_reports_disabled: false
    scripts_disabled: false
    server_url: ${FLEET_URL}
  sso_settings:
    enable_jit_provisioning: false
    enable_sso: true
    enable_sso_idp_login: true
    entity_id: fleet.kitzy.net
    idp_image_url:
    idp_name: Google
    metadata: ${FLEET_SSO_METADATA}
    metadata_url:
    sso_server_url:
  webhook_settings:
    activities_webhook:
      destination_url:
      enable_activities_webhook: false
    failing_policies_webhook:
      destination_url:
      enable_failing_policies_webhook: false
      host_batch_size: 0
      policy_ids:
    host_status_webhook:
      days_count: 0
      destination_url:
      enable_host_status_webhook: false
      host_percentage: 0
    interval: 24h0m0s
    vulnerabilities_webhook:
      destination_url:
      enable_vulnerabilities_webhook: false
      host_batch_size: 0
  yara_rules:
policies:
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks that password is required to wake the computer from sleep or
    screen saver is enabled.
  name: Ensure a password is required to wake the computer from sleep or screen saver
    is enabled
  platform: darwin
  query: "SELECT 1 WHERE \n  EXISTS (\n    SELECT 1 FROM managed_policies WHERE \n
    \       domain='com.apple.screensaver' AND \n        name='askForPassword' AND
    \n        (value = 1 OR value = 'true') AND \n        username = ''\n    )\n  AND
    EXISTS (\n    SELECT 1 FROM managed_policies WHERE \n        domain='com.apple.screensaver'
    AND \n        name='askForPasswordDelay' AND \n        value <= 5 AND \n        username
    = ''\n    )\n  AND NOT EXISTS (\n    SELECT 1 FROM managed_policies WHERE \n        domain='com.apple.screensaver'
    AND \n        name='askForPassword' AND \n        (value != 1 AND value != 'true')\n
    \   )\n  AND NOT EXISTS (\n    SELECT 1 FROM managed_policies WHERE \n        domain='com.apple.screensaver'
    AND \n        name='askForPasswordDelay' AND \n        value > 5\n    );  "
  resolution: |
    Automated method:
    Ask your system administrator to deploy an MDM profile that ensures a password is required to wake the computer from sleep or screen saver is enabled.
    Graphical method:
      Perform the following steps to ensure a password is required to wake the computer from sleep or screen saver is enabled:
        1. Open System Settings
        2. Select Lock Screen
        3. Verify that "Require password after screensaver begins or display is turned
        off" is set with "After 0 seconds" or "After 5 seconds"
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks that the system is configured via MDM to automatically install
    updates.
  name: Ensure auto-update is enabled
  platform: darwin
  query: "SELECT 1 WHERE \n  EXISTS (\n    SELECT 1 FROM managed_policies WHERE \n
    \       domain='com.apple.SoftwareUpdate' AND \n        name='AutomaticCheckEnabled'
    AND \n        (value = 1 OR value = 'true') AND \n        username = ''\n    )\n
    \ AND NOT EXISTS (\n    SELECT 1 FROM managed_policies WHERE \n        domain='com.apple.SoftwareUpdate'
    AND \n        name='AutomaticCheckEnabled' AND \n        (value != 1 AND value
    != 'true')\n    );  \n"
  resolution: Ask your system administrator to deploy an MDM profile that enables
    automatic updates.
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: |
    This policy setting determines the least number of characters that make up a password for a user account.
  name: Ensure 'Minimum password length' is set to '14 or more characters'
  platform: windows
  query: |
    SELECT 1 FROM security_profile_info WHERE minimum_password_length >= 14;
  resolution: |
    Automatic method:
    Ask your system administrator to establish the recommended configuration via GP, set the following UI path to 14 or more characters
    'Computer Configuration\Policies\Windows Settings\Security Settings\Account Policies\Password Policy\Minimum password length'
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks to make sure that the Gatekeeper feature is enabled on macOS
    devices. Gatekeeper tries to ensure only trusted software is run on a mac machine.
  name: Gatekeeper enabled (macOS)
  platform: darwin
  query: SELECT 1 FROM gatekeeper WHERE assessments_enabled = 1;
  resolution: 'To enable Gatekeeper, on the failing device, run the following command
    in the Terminal app: /usr/sbin/spctl --master-enable.'
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks to make sure that full disk encryption is enabled on Windows
    devices.
  name: Full disk encryption enabled (Windows)
  platform: windows
  query: SELECT 1 FROM bitlocker_info WHERE drive_letter='C:' AND protection_status=1;
  resolution: 'To get additional information, run the following osquery query on the
    failing device: SELECT * FROM bitlocker_info. In the query results, if protection_status
    is 2, then the status cannot be determined. If it is 0, it is considered unprotected.
    Use the additional results (percent_encrypted, conversion_status, etc.) to help
    narrow down the specific reason why Windows considers the volume unprotected.'
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks to make sure that full disk encryption (FileVault) is enabled
    on macOS devices.
  name: Full disk encryption enabled (macOS)
  platform: darwin
  query: SELECT 1 FROM disk_encryption WHERE user_uuid IS NOT "" AND filevault_status
    = 'on' LIMIT 1;
  resolution: To enable full disk encryption, on the failing device, select System
    Preferences > Security & Privacy > FileVault > Turn On FileVault.
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks if the root drive is encrypted. There are many ways to encrypt
    Linux systems. This is the default on distributions such as Ubuntu.
  name: Full disk encryption enabled (Linux)
  platform: linux
  query: SELECT 1 FROM mounts m, disk_encryption d WHERE m.device_alias = d.name AND
    d.encrypted = 1 AND m.path = '/';
  resolution: Ensure the image deployed to your Linux workstation includes full disk
    encryption.
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks to make sure that the System Integrity Protection feature is
    enabled.
  name: System Integrity Protection enabled (macOS)
  platform: darwin
  query: SELECT 1 FROM sip_config WHERE config_flag = 'sip' AND enabled = 1;
  resolution: 'To enable System Integrity Protection, on the failing device, run the
    following command in the Terminal app: /usr/sbin/spctl --master-enable.'
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: 'Checks that a mobile device management (MDM) solution configures the
    Mac to prevent login in without a password. Note: This policy will not report
    a value if FileVault is disabled.'
  name: Automatic login disabled (macOS)
  platform: darwin
  query: SELECT 1 FROM managed_policies WHERE domain = 'com.apple.loginwindow' AND
    name = 'DisableFDEAutoLogin' AND value = 1 LIMIT 1;
  resolution: Contact your IT administrator to ensure your Mac is receiving a profile
    that disables automatic login.
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks that a mobile device management (MDM) solution configures the
    Mac to enabled secure keyboard entry for the Terminal application.
  name: Secure keyboard entry for Terminal application enabled (macOS)
  platform: darwin
  query: SELECT 1 FROM managed_policies WHERE domain = 'com.apple.Terminal' AND name
    = 'SecureKeyboardEntry' AND value = 1 LIMIT 1;
  resolution: Contact your IT administrator to ensure your Mac is receiving a profile
    that enables secure keyboard entry for the Terminal application.
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks the version of Malware Removal Tool (MRT) and the built-in macOS
    AV (Xprotect). Replace version numbers with the latest version regularly.
  name: Antivirus healthy (macOS)
  platform: darwin
  query: SELECT score FROM (SELECT case when COUNT(*) = 2 then 1 ELSE 0 END AS score
    FROM plist WHERE (key = 'CFBundleShortVersionString' AND path = '/Library/Apple/System/Library/CoreServices/XProtect.bundle/Contents/Info.plist'
    AND value>=2162) OR (key = 'CFBundleShortVersionString' AND path = '/Library/Apple/System/Library/CoreServices/MRT.app/Contents/Info.plist'
    and value>=1.93)) WHERE score == 1;
  resolution: To enable automatic security definition updates, on the failing device,
    select System Preferences > Software Update > Advanced > Turn on Install system
    data files and security updates.
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks the status of antivirus and signature updates from the Windows
    Security Center.
  name: Antivirus healthy (Windows)
  platform: windows
  query: SELECT 1 from windows_security_center wsc CROSS JOIN windows_security_products
    wsp WHERE antivirus = 'Good' AND type = 'Antivirus' AND signatures_up_to_date=1;
  resolution: Ensure Windows Defender or your third-party antivirus is running, up
    to date, and visible in the Windows Security Center.
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks that both ClamAV's daemon and its updater service (freshclam)
    are running.
  name: Antivirus healthy (Linux)
  platform: linux
  query: SELECT score FROM (SELECT case when COUNT(*) = 2 then 1 ELSE 0 END AS score
    FROM processes WHERE (name = 'clamd') OR (name = 'freshclam')) WHERE score ==
    1;
  resolution: Ensure ClamAV and Freshclam are installed and running.
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: 'Required: osquery deployed with Orbit, or manual installation of macadmins/osquery-extension.
    Checks that a mac is enrolled to MDM. Add a AND on identity_certificate_uuid to
    check for a specific MDM.'
  name: MDM enrolled (macOS)
  platform: darwin
  query: SELECT 1 from mdm WHERE enrolled='true';
  resolution: Enroll device to MDM
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks if the application (Docker Desktop example) is installed and
    up to date, or not installed. Fails if the application is installed and on a lower
    version. You can copy this query and replace the bundle_identifier and bundle_version
    values to apply the same type of policy to other applications.
  name: Docker application is up to date or not present (macOS)
  platform: darwin
  query: SELECT 1 WHERE EXISTS (SELECT 1 FROM apps a1 WHERE a1.bundle_identifier =
    'com.electron.dockerdesktop' AND a1.bundle_short_version>='4.6.1') OR NOT EXISTS
    (SELECT 1 FROM apps a2 WHERE a2.bundle_identifier = 'com.electron.dockerdesktop');
  resolution: Update Docker or remove it if not used.
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: 'Required: osquery must have Full Disk Access. Policy passes if all
    keys are encrypted, including if no keys are present.'
  name: SSH keys encrypted
  platform: darwin,linux,windows
  query: SELECT 1 WHERE NOT EXISTS (SELECT 1 FROM users CROSS JOIN user_ssh_keys USING
    (uid) WHERE encrypted='0');
  resolution: 'Use this command to encrypt existing SSH keys by providing the path
    to the file: ssh-keygen -o -p -f /path/to/file'
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks for an autostart that is attempting to load a dynamic link library
    (DLL) from the internet.
  name: Suspicious autostart (Windows)
  platform: windows
  query: SELECT 1 WHERE NOT EXISTS (SELECT 1 FROM startup_items WHERE path = "regsvr32"
    AND args LIKE "%http%");
  resolution: Remove the suspicious startup entry.
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks if the firewall is enabled.
  name: Firewall enabled (macOS)
  platform: darwin
  query: SELECT 1 FROM alf WHERE global_state >= 1;
  resolution: In System Preferences, open Security & Privacy, navigate to the Firewall
    tab and click Turn On Firewall.
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks that a mobile device management (MDM) solution configures the
    Mac to enable screen lock.
  name: Screen lock enabled (macOS)
  platform: darwin
  query: SELECT 1 FROM managed_policies WHERE name='askForPassword' AND value='1';
  resolution: Contact your IT administrator to ensure your Mac is receiving a profile
    that enables screen lock.
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks if the screen lock is enabled and configured to lock the system
    within 30 minutes or less.
  name: Screen lock enabled (Windows)
  platform: windows
  query: SELECT 1 FROM registry WHERE path = 'HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Policies\System\InactivityTimeoutSecs'
    AND CAST(data as INTEGER) <= 1800;
  resolution: 'Contact your IT administrator to enable the Interactive Logon: Machine
    inactivity limit setting with a value of 1800 seconds or lower.'
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks that the password policy requires at least 10 characters. Requires
    osquery 5.4.0 or newer.
  name: Password requires 10 or more characters (macOS)
  platform: darwin
  query: SELECT 1 FROM (SELECT cast(lengthtxt as integer(2)) minlength FROM (SELECT
    SUBSTRING(length, 1, 2) AS lengthtxt FROM (SELECT policy_description, policy_identifier,
    split(policy_content, '{', 1) AS length FROM password_policy WHERE policy_identifier
    LIKE '%minLength')) WHERE minlength >= 10);
  resolution: Contact your IT administrator to make sure your Mac is receiving configuration
    profiles for password length.
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks that the operating system is up to date.
  name: Operating system up to date (macOS)
  platform: darwin
  query: SELECT 1 FROM os_version WHERE version >= '14.1.1';
  resolution: From the Apple menu () in the corner of your screen choose System Preferences.
    Then select Software Update and select Upgrade Now. You might be asked to restart
    or enter your password.
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks that a mobile device management (MDM) solution configures the
    Mac to automatically check for updates.
  name: Automatic updates enabled (macOS)
  platform: darwin
  query: SELECT 1 FROM managed_policies WHERE domain='com.apple.SoftwareUpdate' AND
    name='AutomaticCheckEnabled' AND value=1 LIMIT 1;
  resolution: Contact your IT administrator to ensure your Mac is receiving a profile
    that enables automatic updates.
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks that a mobile device management (MDM) solution configures the
    Mac to automatically download updates.
  name: Automatic update downloads enabled (macOS)
  platform: darwin
  query: SELECT 1 FROM managed_policies WHERE domain='com.apple.SoftwareUpdate' AND
    name='AutomaticDownload' AND value=1 LIMIT 1;
  resolution: Contact your IT administrator to ensure your Mac is receiving a profile
    that enables automatic update downloads.
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks that a mobile device management (MDM) solution configures the
    Mac to automatically install updates to App Store applications.
  name: Automatic installation of application updates is enabled (macOS)
  platform: darwin
  query: SELECT 1 FROM managed_policies WHERE domain='com.apple.SoftwareUpdate' AND
    name='AutomaticallyInstallAppUpdates' AND value=1 LIMIT 1;
  resolution: Contact your IT administrator to ensure your Mac is receiving a profile
    that enables automatic installation of application updates.
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks that a mobile device management (MDM) solution configures the
    Mac to automatically download updates to built-in macOS security tools such as
    malware removal tools.
  name: Automatic security and data file updates is enabled (macOS)
  platform: darwin
  query: SELECT 1 FROM managed_policies WHERE domain='com.apple.SoftwareUpdate' AND
    name='CriticalUpdateInstall' AND value=1 LIMIT 1;
  resolution: Contact your IT administrator to ensure your Mac is receiving a profile
    that enables automatic security and data update installation.
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks that a mobile device management (MDM) solution configures the
    Mac to automatically install operating system updates.
  name: Automatic installation of operating system updates is enabled (macOS)
  platform: darwin
  query: SELECT 1 FROM managed_policies WHERE domain='com.apple.SoftwareUpdate' AND
    name='AutomaticallyInstallMacOSUpdates' AND value=1 LIMIT 1;
  resolution: Contact your IT administrator to ensure your Mac is receiving a profile
    that enables automatic installation of operating system updates.
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks that a mobile device management (MDM) solution configures the
    Mac to lock the screen after 20 minutes or less.
  name: Lock screen after inactivity of 20 minutes or less (macOS)
  platform: darwin
  query: SELECT 1 WHERE EXISTS (SELECT CAST(value as integer(4)) valueint from managed_policies
    WHERE domain = 'com.apple.screensaver' AND name = 'askForPasswordDelay' AND valueint
    <= 60 LIMIT 1) AND EXISTS (SELECT CAST(value as integer(4)) valueint from managed_policies
    WHERE domain = 'com.apple.screensaver' AND name = 'idleTime' AND valueint <= 1140
    LIMIT 1) AND EXISTS (SELECT 1 from managed_policies WHERE domain='com.apple.screensaver'
    AND name='askForPassword' AND value=1 LIMIT 1);
  resolution: Contact your IT administrator to ensure your Mac is receiving a profile
    that enables the screen saver after inactivity of 20 minutes or less.
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks that a mobile device management (MDM) solution configures the
    Mac to prevent Internet sharing.
  name: Internet sharing is blocked (macOS)
  platform: darwin
  query: SELECT 1 FROM managed_policies WHERE domain='com.apple.MCX' AND name='forceInternetSharingOff'
    AND value='1' LIMIT 1;
  resolution: Contact your IT administrator to ensure your Mac is receiving a profile
    that prevents Internet sharing.
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks that a mobile device management (MDM) solution configures the
    Mac to disable content caching.
  name: Content caching is disabled (macOS)
  platform: darwin
  query: SELECT 1 FROM managed_policies WHERE domain='com.apple.applicationaccess'
    AND name='allowContentCaching' AND value='0' LIMIT 1;
  resolution: Contact your IT administrator to ensure your Mac is receiving a profile
    that disables content caching.
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks that a mobile device management (MDM) solution configures the
    Mac to limit advertisement tracking.
  name: Ad tracking is limited (macOS)
  platform: darwin
  query: SELECT 1 FROM managed_policies WHERE domain='com.apple.AdLib' AND name='forceLimitAdTracking'
    AND value='1' LIMIT 1;
  resolution: Contact your IT administrator to ensure your Mac is receiving a profile
    that disables advertisement tracking.
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks that a mobile device management (MDM) solution configures the
    Mac to prevent iCloud Desktop and Documents sync.
  name: iCloud Desktop and Document sync is disabled (macOS)
  platform: darwin
  query: SELECT 1 FROM managed_policies WHERE domain='com.apple.icloud.managed' AND
    name='DisableCloudSync' AND value='1' LIMIT 1;
  resolution: Contact your IT administrator to ensure your Mac is receiving a profile
    to prevent iCloud Desktop and Documents sync.
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks that a mobile device management (MDM) solution configures the
    Mac to log firewall activity.
  name: Firewall logging is enabled (macOS)
  platform: darwin
  query: SELECT 1 FROM managed_policies WHERE domain='com.apple.security.firewall'
    AND name='EnableLogging' AND value='1' LIMIT 1;
  resolution: Contact your IT administrator to ensure your Mac is receiving a profile
    that enables firewall logging.
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks that a mobile device management (MDM) solution configures the
    Mac to prevent the use of a guest account.
  name: Guest account disabled (macOS)
  platform: darwin
  query: SELECT 1 FROM managed_policies WHERE domain='com.apple.MCX' AND name='DisableGuestAccount'
    AND value='1' LIMIT 1;
  resolution: Contact your IT administrator to ensure your Mac is receiving a profile
    that disables the guest account.
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks that a mobile device management (MDM) solution configures the
    Mac to prevent guest access to shared folders.
  name: Guest access to shared folders is disabled (macOS)
  platform: darwin
  query: SELECT 1 FROM managed_policies WHERE domain='com.apple.AppleFileServer' AND
    name='guestAccess' AND value='0' LIMIT 1;
  resolution: Contact your IT administrator to ensure your Mac is receiving a profile
    that prevents guest access to shared folders.
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Looks for PDF files with file names typically used by 1Password for
    emergency recovery kits. To protect the performance of your devices, the search
    is one level deep and limited to the Desktop, Documents, Downloads, and Shared
    folders.
  name: No 1Password emergency kit stored in desktop, documents, or downloads folders
    (macOS)
  platform: darwin
  query: SELECT 1 WHERE NOT EXISTS (SELECT 1 FROM file WHERE filename LIKE '%Emergency
    Kit%.pdf' AND (path LIKE '/Users/%/Desktop/%' OR path LIKE '/Users/%/Documents/%'
    OR path LIKE '/Users/%/Downloads/%' OR path LIKE '/Users/Shared/%'));
  resolution: Delete 1Password emergency kits from your computer, and empty the trash.
    1Password emergency kits should only be printed and stored in a physically secure
    location.
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks if a Group Policy configures the computer to enable the domain
    profile for Windows Firewall. The domain profile applies to networks where the
    host system can authenticate to a domain controller. Some auditors requires that
    this setting is configured by a Group Policy.
  name: Firewall enabled, domain profile (Windows)
  platform: windows
  query: SELECT 1 FROM registry WHERE path LIKE 'HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\WindowsFirewall\DomainProfile\EnableFirewall'
    AND CAST(data as integer) = 1;
  resolution: Contact your IT administrator to ensure your computer is receiving a
    Group Policy that enables the domain profile for Windows Firewall.
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks if a Group Policy configures the computer to enable the private
    profile for Windows Firewall. The private profile applies to networks where the
    host system is connected to a private or home network. Some auditors requires
    that this setting is configured by a Group Policy.
  name: Firewall enabled, private profile (Windows)
  platform: windows
  query: SELECT 1 FROM registry WHERE path LIKE 'HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\WindowsFirewall\PrivateProfile\EnableFirewall'
    AND CAST(data as integer) = 1;
  resolution: Contact your IT administrator to ensure your computer is receiving a
    Group Policy that enables the private profile for Windows Firewall.
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks if a Group Policy configures the computer to enable the public
    profile for Windows Firewall. The public profile applies to networks where the
    host system is connected to public networks such as Wi-Fi hotspots at coffee shops
    and airports. Some auditors requires that this setting is configured by a Group
    Policy.
  name: Firewall enabled, public profile (Windows)
  platform: windows
  query: SELECT 1 FROM registry WHERE path LIKE 'HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\WindowsFirewall\PublicProfile\EnableFirewall'
    AND CAST(data as integer) = 1;
  resolution: Contact your IT administrator to ensure your computer is receiving a
    Group Policy that enables the public profile for Windows Firewall.
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks that the SMBv1 client is disabled.
  name: SMBv1 client driver disabled (Windows)
  platform: windows
  query: SELECT 1 FROM windows_optional_features WHERE name = 'SMB1Protocol-Client'
    AND state != 1;
  resolution: Contact your IT administrator to discuss disabling SMBv1 on your system.
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks that the SMBv1 server is disabled.
  name: SMBv1 server disabled (Windows)
  platform: windows
  query: SELECT 1 FROM windows_optional_features WHERE name = 'SMB1Protocol-Server'
    AND state != 1
  resolution: Contact your IT administrator to discuss disabling SMBv1 on your system.
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks if a Group Policy configures the computer to disable LLMNR.
    Disabling LLMNR can prevent malicious actors from gaining access to the computer's
    credentials. Some auditors require that this setting is configured by a Group
    Policy.
  name: Link-Local Multicast Name Resolution (LLMNR) disabled (Windows)
  platform: windows
  query: SELECT 1 FROM registry WHERE path LIKE 'HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows
    NT\DNSClient\EnableMulticast' AND CAST(data as integer) = 0;
  resolution: Contact your IT administrator to ensure your computer is receiving a
    Group Policy that disables LLMNR on your system.
- calendar_events_enabled: false
  conditional_access_enabled: false
  critical: false
  description: Checks if a Group Policy configures the computer to enable Automatic
    Updates. When enabled, the computer downloads and installs security and other
    important updates automatically. Some auditors require that this setting is configured
    by a Group Policy.
  name: Automatic updates enabled (Windows)
  platform: windows
  query: SELECT 1 FROM registry WHERE path LIKE 'HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Windows\WindowsUpdate\AU\NoAutoUpdate'
    AND CAST(data as integer) = 0;
  resolution: Contact your IT administrator to ensure your computer is receiving a
    Group policy that enables Automatic Updates.
queries:
- automations_enabled: true
  description: Get current users with active shell/console on the system and associated
    process
  discard_data: false
  interval: 300
  logging: snapshot
  min_osquery_version:
  name: Get current users with active shell/console on the system
  observer_can_run: false
  platform: darwin,linux
  query: SELECT user,host,time, p.name, p.cmdline, p.cwd, p.root FROM logged_in_users
    liu, processes p WHERE liu.pid = p.pid and liu.type='user' and liu.user <> ''
    ORDER BY time;
- automations_enabled: true
  description: Detect any processes that run with LD_PRELOAD environment variable
  discard_data: false
  interval: 300
  logging: snapshot
  min_osquery_version:
  name: Get dynamic linker hijacking on Linux (MITRE. T1574.006)
  observer_can_run: false
  platform: linux
  query: SELECT env.pid, env.key, env.value, p.name,p.path, p.cmdline, p.cwd FROM
    process_envs env join processes p USING (pid) WHERE key='LD_PRELOAD';
- automations_enabled: true
  description: Detect any processes that run with DYLD_INSERT_LIBRARIES environment
    variable
  discard_data: false
  interval: 300
  logging: snapshot
  min_osquery_version:
  name: Get dynamic linker hijacking on macOS (MITRE. T1574.006)
  observer_can_run: false
  platform: darwin
  query: SELECT env.pid, env.key, env.value, p.name,p.path, p.cmdline, p.cwd FROM
    process_envs env join processes p USING (pid) WHERE key='DYLD_INSERT_LIBRARIES';
- automations_enabled: true
  description: Domain Joined environments normally have root or other service only
    accounts and users are SSH-ing using their Domain Accounts.
  discard_data: false
  interval: 300
  logging: snapshot
  min_osquery_version:
  name: Get active user accounts on servers
  observer_can_run: false
  platform: linux
  query: SELECT * FROM shadow WHERE password_status='active' and username!='root';
- automations_enabled: true
  description: The query allows you to check macOS systems for local administrator
    accounts.
  discard_data: false
  interval: 300
  logging: snapshot
  min_osquery_version:
  name: Get local administrator accounts on macOS
  observer_can_run: false
  platform: darwin
  query: SELECT uid, username, type FROM users u JOIN groups g ON g.gid = u.gid;
- automations_enabled: true
  description: List ports that are listening on all interfaces, along with the process
    to which they are attached.
  discard_data: false
  interval: 300
  logging: snapshot
  min_osquery_version:
  name: Get all listening ports, by process
  observer_can_run: false
  platform: linux
  query: SELECT lp.address, lp.pid, lp.port, lp.protocol, p.name, p.path, p.cmdline
    FROM listening_ports lp JOIN processes p ON lp.pid = p.pid WHERE lp.address =
    "0.0.0.0";
- automations_enabled: true
  description: Returns top 10 applications or processes hogging memory the most.
  discard_data: false
  interval: 300
  logging: snapshot
  min_osquery_version:
  name: Get applications hogging memory
  observer_can_run: false
  platform: darwin,linux
  query: SELECT pid, name, ROUND((total_size * '10e-7'), 2) AS memory_used FROM processes
    ORDER BY total_size DESC LIMIT 10;
- automations_enabled: true
  description: Returns servers with root login in the last 24 hours and the time the
    users were logged in.
  discard_data: false
  interval: 300
  logging: snapshot
  min_osquery_version:
  name: Get servers with root login in the last 24 hours
  observer_can_run: false
  platform: darwin,linux
  query: SELECT * FROM last WHERE username = "root" AND time > (( SELECT unix_time
    FROM time ) - 86400 );
- automations_enabled: true
  description: Retrieves metadata about TLS certificates for servers listening on
    the local machine. Enables mTLS adoption analysis and cert expiration notifications.
  discard_data: false
  interval: 300
  logging: snapshot
  min_osquery_version:
  name: Discover TLS certificates
  observer_can_run: false
  platform: linux
  query: SELECT * FROM curl_certificate WHERE hostname IN (SELECT DISTINCT 'localhost:'||port
    FROM listening_ports WHERE protocol=6 AND address!='127.0.0.1' AND address!='::1');
- automations_enabled: true
  description: Geolocate a host using the [ipapi.co](https://ipapi.co) in an emergency.
    Requires the curl table. [Learn more](https://fleetdm.com/guides/locate-assets-with-osquery).
  discard_data: false
  interval: 300
  logging: snapshot
  min_osquery_version:
  name: Geolocate via ipapi.co
  observer_can_run: false
  platform: darwin,windows,linux
  query: SELECT JSON_EXTRACT(result, '$.ip') AS ip, JSON_EXTRACT(result, '$.city')
    AS city, JSON_EXTRACT(result, '$.region') AS region, JSON_EXTRACT(result, '$.country')
    AS country, JSON_EXTRACT(result, '$.latitude') AS latitude, JSON_EXTRACT(result,
    '$.longitude') AS longitude FROM curl WHERE url = 'http://ipapi.co/json';
- automations_enabled: true
  description: List installed Chrome Extensions for all users.
  discard_data: false
  interval: 900
  logging: snapshot
  min_osquery_version:
  name: Get installed Chrome Extensions
  observer_can_run: false
  platform: darwin,windows,linux,chrome
  query: SELECT * FROM users CROSS JOIN chrome_extensions USING (uid);
- automations_enabled: true
  description: Docker containers Processes, can be used on normal systems or a kubenode.
  discard_data: false
  interval: 3600
  logging: snapshot
  min_osquery_version:
  name: Get Docker contained processes on a system
  observer_can_run: false
  platform: darwin,linux
  query: |-
    SELECT c.id, c.name, c.image, c.image_id, c.command, c.created, c.state, c.status, p.cmdline  FROM docker_containers c
    JOIN docker_container_processes p ON c.id = p.id;
- automations_enabled: true
  description: Lists all processes of which the binary which launched them no longer
    exists on disk. Attackers often delete files from disk after launching a process
    to mask presence.
  discard_data: false
  interval: 3600
  logging: snapshot
  min_osquery_version:
  name: Get processes that no longer exist on disk
  observer_can_run: false
  platform: darwin,linux
  query: SELECT name, path, pid FROM processes WHERE on_disk = 0;
- automations_enabled: true
  description: Returns the running Docker containers
  discard_data: false
  interval: 3600
  logging: snapshot
  min_osquery_version:
  name: Get running docker containers
  observer_can_run: false
  platform: darwin,linux
  query: SELECT id, name, image, image_id, state, status FROM docker_containers WHERE
    state = "running";
- automations_enabled: true
  description: 'Returns a list of active processes and the Jar paths which are using
    Log4j. Version numbers are usually within the Jar filename. Note: This query is
    resource intensive and has caused problems on systems with limited swap space.
    Test on some systems before running this widely.'
  discard_data: false
  interval: 3600
  logging: snapshot
  min_osquery_version:
  name: Detect active processes with Log4j running
  observer_can_run: false
  platform: darwin,linux
  query: |
    WITH target_jars AS (
      SELECT DISTINCT path
      FROM (
          WITH split(word, str) AS(
            SELECT '', cmdline || ' '
            FROM processes
            UNION ALL
            SELECT substr(str, 0, instr(str, ' ')), substr(str, instr(str, ' ') + 1)
            FROM split
            WHERE str != '')
          SELECT word AS path
          FROM split
          WHERE word LIKE '%.jar'
        UNION ALL
          SELECT path
          FROM process_open_files
          WHERE path LIKE '%.jar'
      )
    )
    SELECT path, matches
    FROM yara
    WHERE path IN (SELECT path FROM target_jars)
      AND count > 0
      AND sigrule IN (
        'rule log4jJndiLookup {
          strings:
            $jndilookup = "JndiLookup"
          condition:
            $jndilookup
        }',
        'rule log4jJavaClass {
          strings:
            $javaclass = "org/apache/logging/log4j"
          condition:
            $javaclass
        }'
      );
- automations_enabled: true
  description: Reads the version numbers from the Malware Removal Tool (MRT) and built-in
    antivirus (XProtect) plists
  discard_data: false
  interval: 3600
  logging: snapshot
  min_osquery_version:
  name: Get built-in antivirus status on macOS
  observer_can_run: false
  platform: darwin
  query: SELECT path, value AS version FROM plist WHERE (key = 'CFBundleShortVersionString'
    AND path = '/Library/Apple/System/Library/CoreServices/MRT.app/Contents/Info.plist')
    OR (key = 'CFBundleShortVersionString' AND path = '/Library/Apple/System/Library/CoreServices/XProtect.bundle/Contents/Info.plist');
- automations_enabled: true
  description: Selects the antivirus and signatures status from Windows Security Center.
  discard_data: false
  interval: 3600
  logging: snapshot
  min_osquery_version:
  name: Get antivirus status from the Windows Security Center
  observer_can_run: false
  platform: windows
  query: SELECT antivirus, signatures_up_to_date from windows_security_center CROSS
    JOIN windows_security_products WHERE type = 'Antivirus';
- automations_enabled: true
  description: Attempt to discover Python environments (in cwd, path to the python
    binary, and process command line) from running python interpreters and collect
    Python packages from those environments.
  discard_data: false
  interval: 3600
  logging: snapshot
  min_osquery_version:
  name: Discover Python Packages from Running Python Interpreters
  observer_can_run: false
  platform: linux
  query: SELECT * FROM python_packages WHERE directory IN (SELECT DISTINCT directory
    FROM (SELECT SUBSTR(path,0,INSTR(path,'/bin/'))||'/lib' AS directory FROM processes
    WHERE path LIKE '%/bin/%' AND path LIKE '%python%' UNION SELECT SUBSTR(cmdline,0,INSTR(cmdline,'/bin/'))||'/lib'
    AS directory FROM processes WHERE cmdline LIKE '%python%' AND cmdline LIKE '%/bin/%'
    AND path LIKE '%python%' UNION SELECT cwd||'/lib' AS directory FROM processes
    WHERE path LIKE '%python%'));
- automations_enabled: true
  description: Retrieves the OpenSSL version.
  discard_data: false
  interval: 86400
  logging: snapshot
  min_osquery_version:
  name: Get OpenSSL versions
  observer_can_run: false
  platform: linux
  query: SELECT name AS name, version AS version, 'deb_packages' AS source FROM deb_packages
    WHERE name LIKE 'openssl%' UNION SELECT name AS name, version AS version, 'apt_sources'
    AS source FROM apt_sources WHERE name LIKE 'openssl%' UNION SELECT name AS name,
    version AS version, 'rpm_packages' AS source FROM rpm_packages WHERE name LIKE
    'openssl%';
- automations_enabled: true
  description: Presence of authorized SSH keys may be unusual on laptops. Could be
    completely normal on servers, but may be worth auditing for unusual keys and/or
    changes.
  discard_data: false
  interval: 86400
  logging: snapshot
  min_osquery_version:
  name: Get authorized SSH keys
  observer_can_run: false
  platform: darwin,linux
  query: SELECT username, authorized_keys. * FROM users CROSS JOIN authorized_keys
    USING (uid);
- automations_enabled: true
  description: Retrieve application, system, and mobile app crash logs.
  discard_data: false
  interval: 86400
  logging: snapshot
  min_osquery_version:
  name: Get crashes
  observer_can_run: false
  platform: darwin
  query: SELECT uid, datetime, responsible, exception_type, identifier, version, crash_path
    FROM users CROSS JOIN crashes USING (uid);
- automations_enabled: true
  description: Get all software installed on a Linux computer, including browser plugins
    and installed packages. Note that this does not include other running processes
    in the processes table.
  discard_data: false
  interval: 86400
  logging: snapshot
  min_osquery_version:
  name: Get installed Linux software
  observer_can_run: false
  platform: linux
  query: SELECT name AS name, version AS version, 'Package (APT)' AS type, 'apt_sources'
    AS source FROM apt_sources UNION SELECT name AS name, version AS version, 'Package
    (deb)' AS type, 'deb_packages' AS source FROM deb_packages UNION SELECT package
    AS name, version AS version, 'Package (Portage)' AS type, 'portage_packages' AS
    source FROM portage_packages UNION SELECT name AS name, version AS version, 'Package
    (RPM)' AS type, 'rpm_packages' AS source FROM rpm_packages UNION SELECT name AS
    name, '' AS version, 'Package (YUM)' AS type, 'yum_sources' AS source FROM yum_sources
    UNION SELECT name AS name, version AS version, 'Package (NPM)' AS type, 'npm_packages'
    AS source FROM npm_packages UNION SELECT name AS name, version AS version, 'Package
    (Python)' AS type, 'python_packages' AS source FROM python_packages;
- automations_enabled: true
  description: Get all software installed on a macOS computer, including apps, browser
    plugins, and installed packages. Note that this does not include other running
    processes in the processes table.
  discard_data: false
  interval: 86400
  logging: snapshot
  min_osquery_version:
  name: Get installed macOS software
  observer_can_run: false
  platform: darwin
  query: SELECT name AS name, bundle_short_version AS version, 'Application (macOS)'
    AS type, 'apps' AS source FROM apps UNION SELECT name AS name, version AS version,
    'Package (Python)' AS type, 'python_packages' AS source FROM python_packages UNION
    SELECT name AS name, version AS version, 'Browser plugin (Chrome)' AS type, 'chrome_extensions'
    AS source FROM chrome_extensions UNION SELECT name AS name, version AS version,
    'Browser plugin (Firefox)' AS type, 'firefox_addons' AS source FROM firefox_addons
    UNION SELECT name As name, version AS version, 'Browser plugin (Safari)' AS type,
    'safari_extensions' AS source FROM safari_extensions UNION SELECT name AS name,
    version AS version, 'Package (Homebrew)' AS type, 'homebrew_packages' AS source
    FROM homebrew_packages;
- automations_enabled: true
  description: Retrieves the list of installed Safari Extensions for all users in
    the target system.
  discard_data: false
  interval: 86400
  logging: snapshot
  min_osquery_version:
  name: Get installed Safari extensions
  observer_can_run: false
  platform: darwin
  query: SELECT safari_extensions.* FROM users join safari_extensions USING (uid);
- automations_enabled: true
  description: Get all software installed on a Windows computer, including programs,
    browser plugins, and installed packages. Note that this does not include other
    running processes in the processes table.
  discard_data: false
  interval: 86400
  logging: snapshot
  min_osquery_version:
  name: Get installed Windows software
  observer_can_run: false
  platform: windows
  query: SELECT name AS name, version AS version, 'Program (Windows)' AS type, 'programs'
    AS source FROM programs UNION SELECT name AS name, version AS version, 'Package
    (Python)' AS type, 'python_packages' AS source FROM python_packages UNION SELECT
    name AS name, version AS version, 'Browser plugin (IE)' AS type, 'ie_extensions'
    AS source FROM ie_extensions UNION SELECT name AS name, version AS version, 'Browser
    plugin (Chrome)' AS type, 'chrome_extensions' AS source FROM chrome_extensions
    UNION SELECT name AS name, version AS version, 'Browser plugin (Firefox)' AS type,
    'firefox_addons' AS source FROM firefox_addons UNION SELECT name AS name, version
    AS version, 'Package (Chocolatey)' AS type, 'chocolatey_packages' AS source FROM
    chocolatey_packages;
- automations_enabled: true
  description: Lists all laptops with under-performing or failing batteries.
  discard_data: false
  interval: 86400
  logging: snapshot
  min_osquery_version:
  name: Get laptops with failing batteries
  observer_can_run: false
  platform: darwin
  query: SELECT * FROM battery WHERE health != 'Good' AND condition NOT IN ('', 'Normal');
- automations_enabled: true
  description: Identify SSH keys created without a passphrase which can be used in
    Lateral Movement (MITRE. TA0008)
  discard_data: false
  interval: 86400
  logging: snapshot
  min_osquery_version:
  name: Get unencrypted SSH keys for local accounts
  observer_can_run: false
  platform: darwin,linux
  query: SELECT uid, username, description, path, encrypted FROM users CROSS JOIN
    user_ssh_keys using (uid) WHERE encrypted=0;
- automations_enabled: true
  description: Line-parsed /etc/hosts
  discard_data: false
  interval: 86400
  logging: snapshot
  min_osquery_version:
  name: Get etc hosts entries
  observer_can_run: false
  platform: darwin,windows,linux
  query: SELECT * FROM etc_hosts WHERE address not in ('127.0.0.1', '::1');
- automations_enabled: true
  description: Network interfaces MAC address
  discard_data: false
  interval: 86400
  logging: snapshot
  min_osquery_version:
  name: Get network interfaces
  observer_can_run: false
  platform: darwin,linux
  query: SELECT a.interface, a.address, d.mac FROM interface_addresses a JOIN interface_details
    d USING (interface) WHERE address not in ('127.0.0.1', '::1');
- automations_enabled: true
  description: Local user accounts (including domain accounts that have logged on
    locally (Windows)).
  discard_data: false
  interval: 86400
  logging: snapshot
  min_osquery_version:
  name: Get local user accounts
  observer_can_run: false
  platform: darwin,windows,linux
  query: SELECT uid, gid, username, description, directory, shell FROM users;
- automations_enabled: true
  description: Detects devices that are potentially vulnerable to CVE-2021-1675 because
    the print spooler service is not disabled.
  discard_data: false
  interval: 86400
  logging: snapshot
  min_osquery_version:
  name: Get Windows print spooler remote code execution vulnerability
  observer_can_run: false
  platform: windows
  query: SELECT CASE cnt WHEN 2 THEN "TRUE" ELSE "FALSE" END "Vulnerable" FROM (SELECT
    name start_type, COUNT(name) AS cnt FROM services WHERE name = 'NTDS' or (name
    = 'Spooler' and start_type <> 'DISABLED')) WHERE cnt = 2;
- automations_enabled: true
  description: Collects the local user accounts and their respective user group.
  discard_data: false
  interval: 86400
  logging: snapshot
  min_osquery_version:
  name: Get local users and their privileges
  observer_can_run: false
  platform: darwin,linux
  query: SELECT uid, username, type, groupname FROM users u JOIN groups g ON g.gid
    = u.gid;
- automations_enabled: true
  description: Watches for the backdoored Python packages installed on the system.
    See (http://www.nbu.gov.sk/skcsirt-sa-20170909-pypi/index.html)
  discard_data: false
  interval: 86400
  logging: snapshot
  min_osquery_version:
  name: Get malicious Python backdoors
  observer_can_run: false
  platform: darwin,windows,linux
  query: SELECT CASE cnt WHEN 0 THEN "NONE_INSTALLED" ELSE "INSTALLED" END AS "Malicious
    Python Packages", package_name, package_version FROM (SELECT COUNT(name) AS cnt,
    name AS package_name, version AS package_version, path AS package_path FROM python_packages
    WHERE package_name IN ('acquisition', 'apidev-coop', 'bzip', 'crypt', 'django-server',
    'pwd', 'setup-tools', 'telnet', 'urlib3', 'urllib'));
- automations_enabled: true
  description: Checks for artifacts from the Floxif trojan on Windows machines.
  discard_data: false
  interval: 86400
  logging: snapshot
  min_osquery_version:
  name: Check for artifacts of the Floxif trojan
  observer_can_run: false
  platform: windows
  query: SELECT * FROM registry WHERE path LIKE 'HKEY_LOCAL_MACHINE\\SOFTWARE\\Piriform\\Agomo%';
- automations_enabled: true
  description: Returns applications that were opened within the last 24 hours starting
    with the last opened application.
  discard_data: false
  interval: 86400
  logging: snapshot
  min_osquery_version:
  name: Get applications that were opened within the last 24 hours
  observer_can_run: false
  platform: darwin
  query: SELECT * FROM apps WHERE last_opened_time > (( SELECT unix_time FROM time
    ) - 86400 ) ORDER BY last_opened_time DESC;
- automations_enabled: true
  description: Returns applications that are not in the `/Applications` directory
  discard_data: false
  interval: 86400
  logging: snapshot
  min_osquery_version:
  name: Get applications that are not in the Applications directory
  observer_can_run: false
  platform: darwin
  query: SELECT * FROM apps WHERE path NOT LIKE '/Applications/%';
- automations_enabled: true
  description: Returns the operating system name and version on the device.
  discard_data: false
  interval: 86400
  logging: snapshot
  min_osquery_version:
  name: Get operating system information
  observer_can_run: false
  platform: darwin
  query: SELECT name, version FROM os_version;
- automations_enabled: true
  description: Lists the currently enabled applications configured to handle mailto,
    http and ftp schemes.
  discard_data: false
  interval: 86400
  logging: snapshot
  min_osquery_version:
  name: Identify the default mail, http and ftp applications
  observer_can_run: false
  platform: darwin
  query: SELECT * FROM app_schemes WHERE (scheme='mailto' OR scheme='http' OR scheme='ftp')
    AND enabled='1';
- automations_enabled: true
  description: Identifies certificates associated with Apple development signing and
    notarization. Replace ABCDEFG with your company's identifier.
  discard_data: false
  interval: 86400
  logging: snapshot
  min_osquery_version:
  name: Identify Apple development secrets (macOS)
  observer_can_run: false
  platform: darwin
  query: SELECT * FROM keychain_items WHERE label LIKE '%ABCDEFG%';
- automations_enabled: true
  description: Get a list of installed VS Code extensions (requires osquery > 5.11.0).
  discard_data: false
  interval: 86400
  logging: snapshot
  min_osquery_version:
  name: Get a list of Visual Studio Code extensions
  observer_can_run: false
  platform: darwin
  query: SELECT u.username, vs.* FROM users u JOIN vscode_extensions vs ON u.uid =
    vs.uid;
- automations_enabled: true
  description: List all table names in the schema of the currently installed version
    of osquery
  discard_data: false
  interval: 86400
  logging: snapshot
  min_osquery_version:
  name: List osquery table names
  observer_can_run: false
  platform: darwin,linux
  query: SELECT DISTINCT name FROM osquery_registry;
